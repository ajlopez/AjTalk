AjTalk

An Smalltalk-like interpreter, written in C#.

Work in progress.

2007-09-15
Creation of this project folder

2008-05-04
Begin to work with TDD (late but sure)

2008-07-11
Publish the code in Google Code

2008-08-24
Add support for local variables in compiling method

2008-09-28
Skip comments in tokenizer
More test for Method
Compile global name in Method
Set/Get global bytecodes
Global objects in Machine
Symbol support in tokenizer
Method inherits from Block
Loader from file and tests

2008-10-13
Update to VS 2008
VS Tests instead NUnit tests
Loader support for subclassing, instance variables,
	and method definition

2008-12-21
Support for [ block ] in compiler and execution block
	(no parameters yet)
Initial .NET object creation and method invocation

2008-12-25
Test loading Library1.st
methods without ^ return self

2008-12-26
Test using Library1.st added

2008-12-27
BaseClass new tests
New bytecodes instSize, instAt: instAt:put:

2008-12-28
IBehavior, IClassDescription added
BaseBehavior, BaseClassDescription added

2009-01-18
Reimplementing .NET object support
New ByteCodes GetDotNetType, NewDotNetObject, InvokeDotNet
StyleCop applied
Send message basicNew as bytecode NewObject
Special treatment for new on Behavior, ClassDescription

2010-07-11
Renaming test methods
Fix ifFalse: using block

2010-07-24
Renaming Tokenizer to Lexer
Renaming Compiler to Parser
New AjTalk.Compiler namespace
New AjTalk.Language namespace
New folders in tests
First EvaluateTests

2010-07-30
NativeBehavior with tests
IBehavior.NewObject returns object instead of IObject
nativeSelf in ExecutionBlock
DotNetObject.SendNativeMethod, .SendNativeStaticMethod with tests
DotNetObject.SendMessage (WIP)
bytecode .Send manage native object or IObject

2010-09-12
subclass:nativeType: support in test, DoesNotUnderstand
new example test NativeBahevior.st
IMetaClass
BaseMetaClass
BaseBehaviorTests
new example test NativeFileInfo.st
BaseIndexedObjectTests
BehabiorDoesNotUnderstandMethod
.Superclass as IBehavior

2010-09-18
class methods support in Loader
new and class in DoesNotUnderstandMethod
new example DefineRectangleWithNewAndInitialize.st
DoesNotUnderstandMethod and BehaviorDoesNotUnderstandMethod now in core, and in Machine
AjTalk.Gui with first Transcript
Refactor of ByteCode processing (WIP)

2010-09-19
Add ; (semicolon) support in lexer, parser, with tests
Message
MessageQueue with tests
AgentObject with tests
agent: support in nil, BehaviorDoesNotUnderstand

2010-09-25
minimal Browser in AjTalk.Gui (WIP)
Boot.st in AjTalk.Gui
ClassDescriptor.ToDefineString
IClass.Category
IClassDescription.GetInstanceVariableNames
IClassDescription.GetClassVariableNames
Move BaseClassDescription.classvariablenames to MetaClass

2010-09-26
Fix BaseClass.ToDefineString
Show class define in Browser
Refactoring Loader
Todo.txt

2010-10-10
BaseClass.ToOutputString() with tests
BaseObject Serializable, ISerialize implements, with tests
Hosting namespace
IHost interface
Host with first tests
ObjectProxy WIP
RemotingHostServer, RemotingHostClient, ClientObject, with tests

2010-10-11
Support in DotNativeObject for set properties, with tests
Now, Method accepts IBehavior instead IClassDescription in constructor
New example NativeRectangle.st with tests
TypeUtilities for resolve types using .AsType(string). Type.GetType() only works in the calling assembly
Fixing lexer bug: !new) now is two tokens !new and )
RemotingHostServer.st example with tests
RemotingHostClient.st example with tests

AgentObj

Angel "Java" Lopez
http://www.ajlopez.com/en
http://ajlopez.wordpress.com/
